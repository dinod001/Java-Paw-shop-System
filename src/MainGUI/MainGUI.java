/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MainGUI;

import ProductData.Supplies;
import LoginGUI.LoginGI;
import ProductData.SupplliesDB;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author DSYS
 */
public class MainGUI extends javax.swing.JFrame {

    Supplies supply;
    SupplliesDB supplydb;
    ArrayList<Supplies> SupplyList;
    private DefaultTableModel TableModel;

    public MainGUI() {
        initComponents();
        TableModel = new DefaultTableModel();
        SupplyList = new ArrayList<Supplies>();
        supplydb = new SupplliesDB();
        TableModel.addColumn("Supply ID");
        TableModel.addColumn("Name");
        TableModel.addColumn("Category");
        TableModel.addColumn("Price");
        TableModel.addColumn("Stock");
        Table.setModel(TableModel);
    }
    // Method to check whether the supply ID is already in use
    public boolean checksupplyID() {
        try {
            BufferedReader br = new BufferedReader(new FileReader("ProductDetails.txt"));
            String line;
            try {
                while ((line = br.readLine()) != null) {
                    String extractID = line.split(":")[0];
                    if (extractID.equals(txtsupplyID.getText())) {
                        JOptionPane.showMessageDialog(null, "This supply ID already stored");
                        return false;
                    }
                }
            } catch (IOException ex) {
                Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        return true;
    }
// Method to check whether required text fields are empty
    public boolean checkBlank() {

        if (txtsupplyID.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "supply ID can't be blank");
            return false;
        }
        if (txtname.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "supply name can't be blank");
            return false;
        }
        if (txtprice.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Price can't be blank");
            return false;
        }
        if (txtstock.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Stock can't be blank");
            return false;
        }
        if (cmdcat.getSelectedItem().equals("")) {
            JOptionPane.showMessageDialog(null, "Category can't be blank");
            return false;
        }
        return true;
    }
// Method to view all the supply details from the text file and display them in a table
    public void viewsupplies() {
        SupplyList = supplydb.ViewSupplies();
        TableModel.setRowCount(0);
        for (Supplies supply : SupplyList) {
            int supplyID = supply.getSupplyID();
            String supplyname = supply.getSupplyName();
            String category = supply.getCategory();
            String price = String.format("%.2f", supply.getPrice());
            int stock = supply.getStock();
            TableModel.addRow(new Object[]{supplyID, supplyname, category, price, stock});
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtname = new javax.swing.JTextField();
        txtstock = new javax.swing.JTextField();
        btninsert = new javax.swing.JButton();
        cmdcat = new javax.swing.JComboBox();
        btndelete = new javax.swing.JButton();
        btnupdate = new javax.swing.JButton();
        btnview = new javax.swing.JButton();
        btnsearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        txtsupplyID = new javax.swing.JTextField();
        btnlogout = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtprice = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Supply ID");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Name");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Category");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Stock");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, -1, -1));
        jPanel1.add(txtname, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 80, 150, -1));
        jPanel1.add(txtstock, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 230, 150, -1));

        btninsert.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btninsert.setText("Insert");
        btninsert.setFocusable(false);
        btninsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btninsertActionPerformed(evt);
            }
        });
        jPanel1.add(btninsert, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, -1, -1));

        cmdcat.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Pet Toys", "Harnesses", "Cages", "Grooming Products", "Collars", "Food" }));
        jPanel1.add(cmdcat, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 130, 150, -1));

        btndelete.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btndelete.setText("Delete");
        btndelete.setFocusable(false);
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });
        jPanel1.add(btndelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 270, -1, -1));

        btnupdate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnupdate.setText("Update");
        btnupdate.setFocusable(false);
        btnupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdateActionPerformed(evt);
            }
        });
        jPanel1.add(btnupdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 270, -1, -1));

        btnview.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnview.setText("View all");
        btnview.setFocusable(false);
        btnview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnviewActionPerformed(evt);
            }
        });
        jPanel1.add(btnview, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 310, 80, -1));

        btnsearch.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnsearch.setText("Search");
        btnsearch.setFocusable(false);
        btnsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsearchActionPerformed(evt);
            }
        });
        jPanel1.add(btnsearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 310, -1, -1));

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Table);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 0, 570, 330));
        jPanel1.add(txtsupplyID, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 30, 150, -1));

        btnlogout.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnlogout.setText("Logout");
        btnlogout.setFocusable(false);
        btnlogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnlogoutActionPerformed(evt);
            }
        });
        jPanel1.add(btnlogout, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 350, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Price");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, -1, -1));
        jPanel1.add(txtprice, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 180, 150, -1));

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setText("Clear");
        jButton1.setFocusable(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 310, 80, -1));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/main.jpg"))); // NOI18N
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 390));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/manager.jpg"))); // NOI18N
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 840, 360));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(815, 429));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
//Method triggered when the "Insert" button is clicked to add new supplies to the system
    private void btninsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btninsertActionPerformed
        // TODO add your handling code here:
        if (checkBlank() && checksupplyID()) {
            int supplyID = Integer.valueOf(txtsupplyID.getText());
            String supplyName = txtname.getText();
            String supplyCategory = cmdcat.getSelectedItem().toString();
            double supplyPrice = Double.valueOf(txtprice.getText());
            int supplyStock = Integer.parseInt(txtstock.getText().trim());
            SupplyList.add(supply);
            supply = new Supplies(supplyID, supplyName, supplyCategory, supplyPrice, supplyStock);
            if (supplydb.AddSupplies(supply)) {
                JOptionPane.showMessageDialog(null, "Added Succesfully !");
                viewsupplies();
            } else {
                JOptionPane.showMessageDialog(null, "Can't acces to database");
            }
        }
    }//GEN-LAST:event_btninsertActionPerformed
// Method to clear all input text fields and reset the category selection
    private void clearTextFields() {
        txtsupplyID.setEnabled(true);
        txtsupplyID.setText("");
        txtname.setText("");
        txtprice.setText("");
        txtstock.setText("");
        cmdcat.setSelectedIndex(0); 
    }
//following method use to logout from the MainGUI to LoginGUI
    private void btnlogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnlogoutActionPerformed
        // TODO add your handling code here:
        LoginGI login = new LoginGI();
        JOptionPane.showMessageDialog(null, "Logout Succesfully !");
        this.dispose();
        login.setVisible(true);
    }//GEN-LAST:event_btnlogoutActionPerformed

    private void btnviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnviewActionPerformed
        viewsupplies();
    }//GEN-LAST:event_btnviewActionPerformed
//following method use to delete supplies from the system
    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteActionPerformed

        String supplyID = JOptionPane.showInputDialog(null, "Enter product ID");
        if (supplyID == null || supplyID.trim().isEmpty()) {
            return;  // Exit the method to close the dialog
        }
        if (supplydb.DeleteSupplies(Integer.valueOf(supplyID))) {
            JOptionPane.showMessageDialog(null, "Deleted succesfully");
            viewsupplies();
        } else {
            JOptionPane.showMessageDialog(null, "Product id is not found");
        }
    }//GEN-LAST:event_btndeleteActionPerformed
//following method use to update supply details from the system
    private void btnupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdateActionPerformed
        if (checkBlank()) {
            int supplyID = Integer.valueOf(txtsupplyID.getText());
            String supplyName = txtname.getText();
            String supplyCategory = cmdcat.getSelectedItem().toString();
            double supplyPrice = Double.valueOf(txtprice.getText());
            int supplyStock = Integer.valueOf(txtstock.getText());
            supply = new Supplies(supplyID, supplyName, supplyCategory, supplyPrice, supplyStock);
            if (supplydb.UpdateSupplies(supply)) {
                JOptionPane.showMessageDialog(null, "Updated Succesfully");
                viewsupplies();
            } else {
                JOptionPane.showMessageDialog(null, "Updated Unsuccesfully");
            }
        }
    }//GEN-LAST:event_btnupdateActionPerformed

//following method use to search supply from the system
    private void btnsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsearchActionPerformed
        String getcategory = cmdcat.getSelectedItem().toString();
        SupplyList = supplydb.SearchSupplies(getcategory);
        TableModel.setRowCount(0);
        for (Supplies supply : SupplyList) {
            int supplyID = supply.getSupplyID();
            String supplytname = supply.getSupplyName();
            String category = supply.getCategory();
            double price = supply.getPrice();
            int stock = supply.getStock();
            TableModel.addRow(new Object[]{supplyID, supplytname, category, price, stock});
        }
    }//GEN-LAST:event_btnsearchActionPerformed
//following methos use to get the supply details from the table to textfileds
    private void TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableMouseClicked
        // TODO add your handling code here:
        // get the model from the jtable
        txtsupplyID.disable();
        DefaultTableModel model = (DefaultTableModel) Table.getModel();
        // get the selected row index
        int selectedRowIndex = Table.getSelectedRow();
        txtsupplyID.setText(model.getValueAt(selectedRowIndex, 0).toString());
        txtname.setText(model.getValueAt(selectedRowIndex, 1).toString());
        cmdcat.setSelectedItem(model.getValueAt(selectedRowIndex, 2).toString());
        txtprice.setText(model.getValueAt(selectedRowIndex, 3).toString());
        txtstock.setText(model.getValueAt(selectedRowIndex, 4).toString());
    }//GEN-LAST:event_TableMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        clearTextFields();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Table;
    private javax.swing.JButton btndelete;
    private javax.swing.JButton btninsert;
    private javax.swing.JButton btnlogout;
    private javax.swing.JButton btnsearch;
    private javax.swing.JButton btnupdate;
    private javax.swing.JButton btnview;
    private javax.swing.JComboBox cmdcat;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtname;
    private javax.swing.JTextField txtprice;
    private javax.swing.JTextField txtstock;
    private javax.swing.JTextField txtsupplyID;
    // End of variables declaration//GEN-END:variables
}
